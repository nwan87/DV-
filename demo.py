import os
import sys
import time
sys.path.append("c:\projects")
from mpe_tem_analog.tcdv.dentoncreek.ddr.Instrument_verification.DCPA import AgilentDCPAN6705B as DCPA
from mpe_tem_analog.tcdv.dentoncreek.ddr.Instrument_verification.Scope import AgilentScopeDSA91304AVisa_validated as scope
from mpe_tem_analog.tcdv.common.instruments import AgilentSwitchN8990CR47Tx as SW
import importlib

print("##########################################################")
print("### ###  ### #   #  ###    ### #####   #     ### ##### ###")
print("### #  # #   ## ## #   #   #     #    # #    #  #  #   ###")
print("### #  # ##  # # # #   #   ###   #   #####   ###   #   ###")
print("### #  # #   #   # #   #     #   #  #     #  # #   #   ###")
print("### ###  ### #   #  ###    ###   # #       # #  #  #   ###")
print("##########################################################")
DCPA_Connect = DCPA.fnConnectTCPIP("169.254.44.5")
SW.fnConnect("TCPIP", "169.254.44.19")
scope.fnConnectTCPIP("169.254.44.11")
scope.fnDefaultSetup()
scope.fnSetMeasureSource("CHAN1")
scope.fnSetDisplayOff(2)
scope.fnSetDisplayOff(3)
scope.fnSetDisplayOff(4)
scope.fnSetDisplayAuto(1)
scope.fnSetChannelOffset(1,1)
scope.fnSetVoltageScale(1,1)
scope.fnSetMeasurement('VMax',"CHAN1")

SW.fnCloseRelay(1105)
DCPA.fnTurnOnChannel(DCPA_Connect,1)
print("DCPA_3.3V: ON")
time.sleep(3)
DCPA.fnTurnOffChannel(DCPA_Connect,1)
print("DCPA_3.3V: OFF")
time.sleep(2)

SW.fnCloseRelay(1106)
DCPA.fnTurnOnChannel(DCPA_Connect,3)
print("DCPA_1.8V: ON")
time.sleep(3)
DCPA.fnTurnOffChannel(DCPA_Connect,3)
print("DCPA_1.8V: OFF")
time.sleep(2)

scope.fnDefaultSetup()
print("\nExecuting BERT - Output CLK")
time.sleep(1)
SW.fnCloseRelay(1102)
time.sleep(1)
scope.fnSetVoltageScale(1,0.02)
scope.fnMeasChannelFrequency(1)
scope.fnSetTimeScale(2E-10)
time.sleep(2)

print("\nExecuting BERT - CLK Pattern")
time.sleep(1)
scope.fnSetChannelOffset(1,0.15)
scope.fnSetVoltageScale(1,0.1)
SW.fnCloseRelay(1103)
scope.fnSetMeasPeriod(1,"RIS")
print("Enabling Eye")
time.sleep(1)
scope.fnEnableEye(1)
time.sleep(5)
print("Disabling Eye")
time.sleep(1)
scope.fnDisableEye()
scope.fnDefaultSetup()
SW.fnCloseRelay(1101)
input("End of demo!")
